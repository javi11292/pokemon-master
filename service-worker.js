try{self["workbox:core:5.1.3"]&&_()}catch(e){}const e=(e,...t)=>{let n=e;return t.length>0&&(n+=` :: ${JSON.stringify(t)}`),n};class t extends Error{constructor(t,n){super(e(t,n)),this.name=t,this.details=n}}try{self["workbox:routing:5.1.3"]&&_()}catch(e){}const n=e=>e&&"object"==typeof e?e:{handle:e};class s{constructor(e,t,s="GET"){this.handler=n(t),this.match=e,this.method=s}}class c extends s{constructor(e,t,n){super(({url:t})=>{const n=e.exec(t.href);if(n&&(t.origin===location.origin||0===n.index))return n.slice(1)},t,n)}}const r=e=>new URL(String(e),location.href).href.replace(new RegExp(`^${location.origin}`),"");class i{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,n=this.handleRequest({request:t,event:e});n&&e.respondWith(n)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,n=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(n),e.ports&&e.ports[0]&&n.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const n=new URL(e.url,location.href);if(!n.protocol.startsWith("http"))return;const{params:s,route:c}=this.findMatchingRoute({url:n,request:e,event:t});let r,i=c&&c.handler;if(!i&&this.s&&(i=this.s),i){try{r=i.handle({url:n,request:e,event:t,params:s})}catch(e){r=Promise.reject(e)}return r instanceof Promise&&this.i&&(r=r.catch(s=>this.i.handle({url:n,request:e,event:t}))),r}}findMatchingRoute({url:e,request:t,event:n}){const s=this.t.get(t.method)||[];for(const c of s){let s;const r=c.match({url:e,request:t,event:n});if(r)return s=r,(Array.isArray(r)&&0===r.length||r.constructor===Object&&0===Object.keys(r).length||"boolean"==typeof r)&&(s=void 0),{route:c,params:s}}return{}}setDefaultHandler(e){this.s=n(e)}setCatchHandler(e){this.i=n(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const n=this.t.get(e.method).indexOf(e);if(!(n>-1))throw new t("unregister-route-route-not-registered");this.t.get(e.method).splice(n,1)}}let a;const o=()=>(a||(a=new i,a.addFetchListener(),a.addCacheListener()),a);const u={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},f=e=>[u.prefix,e,u.suffix].filter(e=>e&&e.length>0).join("-"),h=e=>e||f(u.precache),l=e=>e||f(u.runtime),d=new Set;const w=(e,t)=>e.filter(e=>t in e),p=async({request:e,mode:t,plugins:n=[]})=>{const s=w(n,"cacheKeyWillBeUsed");let c=e;for(const e of s)c=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:c}),"string"==typeof c&&(c=new Request(c));return c},g=async({cacheName:e,request:t,event:n,matchOptions:s,plugins:c=[]})=>{const r=await self.caches.open(e),i=await p({plugins:c,request:t,mode:"read"});let a=await r.match(i,s);for(const t of c)if("cachedResponseWillBeUsed"in t){const c=t.cachedResponseWillBeUsed;a=await c.call(t,{cacheName:e,event:n,matchOptions:s,cachedResponse:a,request:i})}return a},y=async({cacheName:e,request:n,response:s,event:c,plugins:i=[],matchOptions:a})=>{const o=await p({plugins:i,request:n,mode:"write"});if(!s)throw new t("cache-put-with-no-response",{url:r(o.url)});const u=await(async({request:e,response:t,event:n,plugins:s=[]})=>{let c=t,r=!1;for(const t of s)if("cacheWillUpdate"in t){r=!0;const s=t.cacheWillUpdate;if(c=await s.call(t,{request:e,response:c,event:n}),!c)break}return r||(c=c&&200===c.status?c:void 0),c||null})({event:c,plugins:i,response:s,request:o});if(!u)return;const f=await self.caches.open(e),h=w(i,"cacheDidUpdate"),l=h.length>0?await g({cacheName:e,matchOptions:a,request:o}):null;try{await f.put(o,u)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of d)await e()}(),e}for(const t of h)await t.cacheDidUpdate.call(t,{cacheName:e,event:c,oldResponse:l,newResponse:u,request:o})},b=g,v=async({request:e,fetchOptions:n,event:s,plugins:c=[]})=>{if("string"==typeof e&&(e=new Request(e)),s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const r=w(c,"fetchDidFail"),i=r.length>0?e.clone():null;try{for(const t of c)if("requestWillFetch"in t){const n=t.requestWillFetch,c=e.clone();e=await n.call(t,{request:c,event:s})}}catch(e){throw new t("plugin-error-request-will-fetch",{thrownError:e})}const a=e.clone();try{let t;t="navigate"===e.mode?await fetch(e):await fetch(e,n);for(const e of c)"fetchDidSucceed"in e&&(t=await e.fetchDidSucceed.call(e,{event:s,request:a,response:t}));return t}catch(e){for(const t of r)await t.fetchDidFail.call(t,{error:e,event:s,originalRequest:i.clone(),request:a.clone()});throw e}};try{self["workbox:strategies:5.1.3"]&&_()}catch(e){}let m;async function R(e,t){const n=e.clone(),s={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},c=t?t(s):s,r=function(){if(void 0===m){const e=new Response("");if("body"in e)try{new Response(e.body),m=!0}catch(e){m=!1}m=!1}return m}()?n.body:await n.blob();return new Response(r,c)}try{self["workbox:precaching:5.1.3"]&&_()}catch(e){}function q(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:n,url:s}=e;if(!s)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!n){const e=new URL(s,location.href);return{cacheKey:e.href,url:e.href}}const c=new URL(s,location.href),r=new URL(s,location.href);return c.searchParams.set("__WB_REVISION__",n),{cacheKey:c.href,url:r.href}}class x{constructor(e){this.o=h(e),this.u=new Map,this.h=new Map,this.l=new Map}addToCacheList(e){const n=[];for(const s of e){"string"==typeof s?n.push(s):s&&void 0===s.revision&&n.push(s.url);const{cacheKey:e,url:c}=q(s),r="string"!=typeof s&&s.revision?"reload":"default";if(this.u.has(c)&&this.u.get(c)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this.u.get(c),secondEntry:e});if("string"!=typeof s&&s.integrity){if(this.l.has(e)&&this.l.get(e)!==s.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:c});this.l.set(e,s.integrity)}if(this.u.set(c,e),this.h.set(c,r),n.length>0){const e="Workbox is precaching URLs without revision "+`info: ${n.join(", ")}\nThis is generally NOT safe. `+"Learn more at https://bit.ly/wb-precache";console.warn(e)}}}async install({event:e,plugins:t}={}){const n=[],s=[],c=await self.caches.open(this.o),r=await c.keys(),i=new Set(r.map(e=>e.url));for(const[e,t]of this.u)i.has(t)?s.push(e):n.push({cacheKey:t,url:e});const a=n.map(({cacheKey:n,url:s})=>{const c=this.l.get(n),r=this.h.get(s);return this.p({cacheKey:n,cacheMode:r,event:e,integrity:c,plugins:t,url:s})});return await Promise.all(a),{updatedURLs:n.map(e=>e.url),notUpdatedURLs:s}}async activate(){const e=await self.caches.open(this.o),t=await e.keys(),n=new Set(this.u.values()),s=[];for(const c of t)n.has(c.url)||(await e.delete(c),s.push(c.url));return{deletedURLs:s}}async p({cacheKey:e,url:n,cacheMode:s,event:c,plugins:r,integrity:i}){const a=new Request(n,{integrity:i,cache:s,credentials:"same-origin"});let o,u=await v({event:c,plugins:r,request:a});for(const e of r||[])"cacheWillUpdate"in e&&(o=e);if(!(o?await o.cacheWillUpdate({event:c,request:a,response:u}):u.status<400))throw new t("bad-precaching-response",{url:n,status:u.status});u.redirected&&(u=await R(u)),await y({event:c,plugins:r,response:u,request:e===n?a:new Request(e),cacheName:this.o,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.u}getCachedURLs(){return[...this.u.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.u.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,n=this.getCacheKeyForURL(t);if(n){return(await self.caches.open(this.o)).match(n)}}createHandler(e=!0){return async({request:n})=>{try{const e=await this.matchPrecache(n);if(e)return e;throw new t("missing-precache-entry",{cacheName:this.o,url:n instanceof Request?n.url:n})}catch(t){if(e)return fetch(n);throw t}}}createHandlerBoundToURL(e,n=!0){if(!this.getCacheKeyForURL(e))throw new t("non-precached-url",{url:e});const s=this.createHandler(n),c=new Request(e);return()=>s({request:c})}}let L;const U=()=>(L||(L=new x),L);const j=(e,t)=>{const n=U().getURLsToCacheKeys();for(const s of function*(e,{ignoreURLParametersMatching:t,directoryIndex:n,cleanURLs:s,urlManipulation:c}={}){const r=new URL(e,location.href);r.hash="",yield r.href;const i=function(e,t=[]){for(const n of[...e.searchParams.keys()])t.some(e=>e.test(n))&&e.searchParams.delete(n);return e}(r,t);if(yield i.href,n&&i.pathname.endsWith("/")){const e=new URL(i.href);e.pathname+=n,yield e.href}if(s){const e=new URL(i.href);e.pathname+=".html",yield e.href}if(c){const e=c({url:r});for(const t of e)yield t.href}}(e,t)){const e=n.get(s);if(e)return e}};let N=!1;function E(e){N||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:n=!0,urlManipulation:s}={})=>{const c=h();self.addEventListener("fetch",r=>{const i=j(r.request.url,{cleanURLs:n,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:s});if(!i)return;let a=self.caches.open(c).then(e=>e.match(i)).then(e=>e||fetch(i));r.respondWith(a)})})(e),N=!0)}const k=[],M={get:()=>k,add(e){k.push(...e)}},O=e=>{const t=U(),n=M.get();e.waitUntil(t.install({event:e,plugins:n}).catch(e=>{throw e}))},S=e=>{const t=U();e.waitUntil(t.activate())};var C;self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),C={},function(e){U().addToCacheList(e),e.length>0&&(self.addEventListener("install",O),self.addEventListener("activate",S))}([{url:"_next/static/c31d46afe3f7a6654633.worker.js",revision:"c2d910c05bc667efeb8e0883191cc049"},{url:"_next/static/chunks/12.c49cf5722f8daddbb420.js",revision:"84c7069a7d890fec12151228ea9ea33b"},{url:"_next/static/chunks/305539526001a18099103131da2d2b95f67c5a0d.6227c4a08f8ce9c68a49.js",revision:"fb7c0cce6dbb9abac59198b0095f2cda"},{url:"_next/static/chunks/305539526001a18099103131da2d2b95f67c5a0d.6227c4a08f8ce9c68a49.js.LICENSE.txt",revision:"6fce53c7c7713ebf61712cc2929746fa"},{url:"_next/static/chunks/commons.353949b40ece4ed38e17.js",revision:"d59badf95da43e2d1a3483e6709a4ac6"},{url:"_next/static/chunks/fb141bda10063f63bcb13e51392b22149fff58c7.719fafc8660628d527b2.js",revision:"7022699b92374093972c58fc15458d33"},{url:"_next/static/chunks/fb141bda10063f63bcb13e51392b22149fff58c7.719fafc8660628d527b2.js.LICENSE.txt",revision:"3d2d88b7877918a326634499feeab80c"},{url:"_next/static/chunks/framework.4b8ef01e73ec4285907f.js",revision:"044386a065f8cbd06908993812eee437"},{url:"_next/static/chunks/framework.4b8ef01e73ec4285907f.js.LICENSE.txt",revision:"b8dc26024c8a5849f6ea9608ff1264e4"},{url:"_next/static/current/_buildManifest.js",revision:"fb96ae7926f5104f50f0cf1b3a23a9b5"},{url:"_next/static/current/_ssgManifest.js",revision:"abee47769bf307639ace4945f9cfd4ff"},{url:"_next/static/current/pages/404.js",revision:"8bfac67087ac740443001ba119142215"},{url:"_next/static/current/pages/[pokemon].js",revision:"1ae5116f325edd249a4d6dd6b1ec5e52"},{url:"_next/static/current/pages/_app.js",revision:"c8ec6d19e46afb5969993da12aba78a5"},{url:"_next/static/current/pages/_error.js",revision:"e517a392a7a4200a70d129e8ff4cfc13"},{url:"_next/static/current/pages/index.js",revision:"b16349fcfc13feb1bea37f3c4219180f"},{url:"_next/static/runtime/main-56b0f3e0482aa360329d.js",revision:"ed04e6bf92e92a73f087958d8fe931ba"},{url:"_next/static/runtime/polyfills-42651cc75ef14fa3642d.js",revision:"095e56de66408c1feb86b80266d5463a"},{url:"_next/static/runtime/webpack-b8f3ec49c254307cc70d.js",revision:"df4083a77ffe6b82853951a824f0c052"}]),E(C),function(e,n,r){let i;if("string"==typeof e){const t=new URL(e,location.href);i=new s(({url:e})=>e.href===t.href,n,r)}else if(e instanceof RegExp)i=new c(e,n,r);else if("function"==typeof e)i=new s(e,n,r);else{if(!(e instanceof s))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});i=e}o().registerRoute(i)}(/^https?.*/,new class{constructor(e={}){this.o=l(e.cacheName),this.g=e.plugins||[],this.v=e.fetchOptions,this.m=e.matchOptions}async handle({event:e,request:n}){"string"==typeof n&&(n=new Request(n));let s,c=await b({cacheName:this.o,request:n,event:e,matchOptions:this.m,plugins:this.g});if(!c)try{c=await this.R(n,e)}catch(e){s=e}if(!c)throw new t("no-response",{url:n.url,error:s});return c}async R(e,t){const n=await v({request:e,event:t,fetchOptions:this.v,plugins:this.g}),s=n.clone(),c=y({cacheName:this.o,request:e,response:s,event:t,plugins:this.g});if(t)try{t.waitUntil(c)}catch(e){}return n}},"GET");
