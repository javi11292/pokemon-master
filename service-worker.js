try{self["workbox:core:5.1.3"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:5.1.3"]&&_()}catch(e){}const s=e=>e&&"object"==typeof e?e:{handle:e};class n{constructor(e,t,n="GET"){this.handler=s(t),this.match=e,this.method=n}}class a extends n{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}const r=e=>new URL(String(e),location.href).href.replace(new RegExp(`^${location.origin}`),"");class i{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:n,route:a}=this.findMatchingRoute({url:s,request:e,event:t});let r,i=a&&a.handler;if(!i&&this.s&&(i=this.s),i){try{r=i.handle({url:s,request:e,event:t,params:n})}catch(e){r=Promise.reject(e)}return r instanceof Promise&&this.i&&(r=r.catch(n=>this.i.handle({url:s,request:e,event:t}))),r}}findMatchingRoute({url:e,request:t,event:s}){const n=this.t.get(t.method)||[];for(const a of n){let n;const r=a.match({url:e,request:t,event:s});if(r)return n=r,(Array.isArray(r)&&0===r.length||r.constructor===Object&&0===Object.keys(r).length||"boolean"==typeof r)&&(n=void 0),{route:a,params:n}}return{}}setDefaultHandler(e){this.s=s(e)}setCatchHandler(e){this.i=s(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this.t.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this.t.get(e.method).splice(s,1)}}let c;const o=()=>(c||(c=new i,c.addFetchListener(),c.addCacheListener()),c);const u={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},f=e=>[u.prefix,e,u.suffix].filter(e=>e&&e.length>0).join("-"),h=e=>e||f(u.precache),l=e=>e||f(u.runtime),d=new Set;const w=(e,t)=>e.filter(e=>t in e),p=async({request:e,mode:t,plugins:s=[]})=>{const n=w(s,"cacheKeyWillBeUsed");let a=e;for(const e of n)a=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:a}),"string"==typeof a&&(a=new Request(a));return a},y=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:a=[]})=>{const r=await self.caches.open(e),i=await p({plugins:a,request:t,mode:"read"});let c=await r.match(i,n);for(const t of a)if("cachedResponseWillBeUsed"in t){const a=t.cachedResponseWillBeUsed;c=await a.call(t,{cacheName:e,event:s,matchOptions:n,cachedResponse:c,request:i})}return c},g=async({cacheName:e,request:s,response:n,event:a,plugins:i=[],matchOptions:c})=>{const o=await p({plugins:i,request:s,mode:"write"});if(!n)throw new t("cache-put-with-no-response",{url:r(o.url)});const u=await(async({request:e,response:t,event:s,plugins:n=[]})=>{let a=t,r=!1;for(const t of n)if("cacheWillUpdate"in t){r=!0;const n=t.cacheWillUpdate;if(a=await n.call(t,{request:e,response:a,event:s}),!a)break}return r||(a=a&&200===a.status?a:void 0),a||null})({event:a,plugins:i,response:n,request:o});if(!u)return;const f=await self.caches.open(e),h=w(i,"cacheDidUpdate"),l=h.length>0?await y({cacheName:e,matchOptions:c,request:o}):null;try{await f.put(o,u)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of d)await e()}(),e}for(const t of h)await t.cacheDidUpdate.call(t,{cacheName:e,event:a,oldResponse:l,newResponse:u,request:o})},b=y,v=async({request:e,fetchOptions:s,event:n,plugins:a=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const r=w(a,"fetchDidFail"),i=r.length>0?e.clone():null;try{for(const t of a)if("requestWillFetch"in t){const s=t.requestWillFetch,a=e.clone();e=await s.call(t,{request:a,event:n})}}catch(e){throw new t("plugin-error-request-will-fetch",{thrownError:e})}const c=e.clone();try{let t;t="navigate"===e.mode?await fetch(e):await fetch(e,s);for(const e of a)"fetchDidSucceed"in e&&(t=await e.fetchDidSucceed.call(e,{event:n,request:c,response:t}));return t}catch(e){for(const t of r)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:i.clone(),request:c.clone()});throw e}};try{self["workbox:strategies:5.1.3"]&&_()}catch(e){}let m;async function q(e,t){const s=e.clone(),n={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},a=t?t(n):n,r=function(){if(void 0===m){const e=new Response("");if("body"in e)try{new Response(e.body),m=!0}catch(e){m=!1}m=!1}return m}()?s.body:await s.blob();return new Response(r,a)}try{self["workbox:precaching:5.1.3"]&&_()}catch(e){}function R(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:n}=e;if(!n)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const a=new URL(n,location.href),r=new URL(n,location.href);return a.searchParams.set("__WB_REVISION__",s),{cacheKey:a.href,url:r.href}}class x{constructor(e){this.o=h(e),this.u=new Map,this.h=new Map,this.l=new Map}addToCacheList(e){const s=[];for(const n of e){"string"==typeof n?s.push(n):n&&void 0===n.revision&&s.push(n.url);const{cacheKey:e,url:a}=R(n),r="string"!=typeof n&&n.revision?"reload":"default";if(this.u.has(a)&&this.u.get(a)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this.u.get(a),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this.l.has(e)&&this.l.get(e)!==n.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:a});this.l.set(e,n.integrity)}if(this.u.set(a,e),this.h.set(a,r),s.length>0){const e="Workbox is precaching URLs without revision "+`info: ${s.join(", ")}\nThis is generally NOT safe. `+"Learn more at https://bit.ly/wb-precache";console.warn(e)}}}async install({event:e,plugins:t}={}){const s=[],n=[],a=await self.caches.open(this.o),r=await a.keys(),i=new Set(r.map(e=>e.url));for(const[e,t]of this.u)i.has(t)?n.push(e):s.push({cacheKey:t,url:e});const c=s.map(({cacheKey:s,url:n})=>{const a=this.l.get(s),r=this.h.get(n);return this.p({cacheKey:s,cacheMode:r,event:e,integrity:a,plugins:t,url:n})});return await Promise.all(c),{updatedURLs:s.map(e=>e.url),notUpdatedURLs:n}}async activate(){const e=await self.caches.open(this.o),t=await e.keys(),s=new Set(this.u.values()),n=[];for(const a of t)s.has(a.url)||(await e.delete(a),n.push(a.url));return{deletedURLs:n}}async p({cacheKey:e,url:s,cacheMode:n,event:a,plugins:r,integrity:i}){const c=new Request(s,{integrity:i,cache:n,credentials:"same-origin"});let o,u=await v({event:a,plugins:r,request:c});for(const e of r||[])"cacheWillUpdate"in e&&(o=e);if(!(o?await o.cacheWillUpdate({event:a,request:c,response:u}):u.status<400))throw new t("bad-precaching-response",{url:s,status:u.status});u.redirected&&(u=await q(u)),await g({event:a,plugins:r,response:u,request:e===s?c:new Request(e),cacheName:this.o,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.u}getCachedURLs(){return[...this.u.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.u.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.o)).match(s)}}createHandler(e=!0){return async({request:s})=>{try{const e=await this.matchPrecache(s);if(e)return e;throw new t("missing-precache-entry",{cacheName:this.o,url:s instanceof Request?s.url:s})}catch(t){if(e)return fetch(s);throw t}}}createHandlerBoundToURL(e,s=!0){if(!this.getCacheKeyForURL(e))throw new t("non-precached-url",{url:e});const n=this.createHandler(s),a=new Request(e);return()=>n({request:a})}}let L;const U=()=>(L||(L=new x),L);const E=(e,t)=>{const s=U().getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:n,urlManipulation:a}={}){const r=new URL(e,location.href);r.hash="",yield r.href;const i=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(r,t);if(yield i.href,s&&i.pathname.endsWith("/")){const e=new URL(i.href);e.pathname+=s,yield e.href}if(n){const e=new URL(i.href);e.pathname+=".html",yield e.href}if(a){const e=a({url:r});for(const t of e)yield t.href}}(e,t)){const e=s.get(n);if(e)return e}};let j=!1;function O(e){j||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:n}={})=>{const a=h();self.addEventListener("fetch",r=>{const i=E(r.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:n});if(!i)return;let c=self.caches.open(a).then(e=>e.match(i)).then(e=>e||fetch(i));r.respondWith(c)})})(e),j=!0)}const K=[],N={get:()=>K,add(e){K.push(...e)}},S=e=>{const t=U(),s=N.get();e.waitUntil(t.install({event:e,plugins:s}).catch(e=>{throw e}))},k=e=>{const t=U();e.waitUntil(t.activate())};var M;self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),M={},function(e){U().addToCacheList(e),e.length>0&&(self.addEventListener("install",S),self.addEventListener("activate",k))}([{url:"_next/static/2e0cee57f637cef2fac7.worker.js",revision:"7f2314cb919d117439b1d086949020e0"},{url:"_next/static/chunks/11.a9d8f07d7fd7ac562c5e.js",revision:"0eb4fa35d600e78067af453a44d7aa39"},{url:"_next/static/chunks/commons.353949b40ece4ed38e17.js",revision:"d59badf95da43e2d1a3483e6709a4ac6"},{url:"_next/static/chunks/e3a41a3a694b45d74b2381fa98c21331f003b29d.6864c44591cbf1a08238.js",revision:"4b4447d6a2444bbf7cf1462dfd4cac3a"},{url:"_next/static/chunks/e3a41a3a694b45d74b2381fa98c21331f003b29d.6864c44591cbf1a08238.js.LICENSE.txt",revision:"5735008847451525374b1f222e4ab316"},{url:"_next/static/chunks/framework.4b8ef01e73ec4285907f.js",revision:"044386a065f8cbd06908993812eee437"},{url:"_next/static/chunks/framework.4b8ef01e73ec4285907f.js.LICENSE.txt",revision:"b8dc26024c8a5849f6ea9608ff1264e4"},{url:"_next/static/runtime/main-9061cbd4f6a5ff384da5.js",revision:"e4232eb60e6fbd3896c7eaab92cf8e60"},{url:"_next/static/runtime/polyfills-673092cd442ac8fa4021.js",revision:"1b5ec1b9807ae2baa33f8ee10bdd7f98"},{url:"_next/static/runtime/webpack-68d986f379f8ddabcac0.js",revision:"28bda1aa95357f602ab634c72253f316"},{url:"_next/static/yxwyHK0z5aGa5aSOEpeqx/_buildManifest.js",revision:"fb96ae7926f5104f50f0cf1b3a23a9b5"},{url:"_next/static/yxwyHK0z5aGa5aSOEpeqx/_ssgManifest.js",revision:"abee47769bf307639ace4945f9cfd4ff"},{url:"_next/static/yxwyHK0z5aGa5aSOEpeqx/pages/404.js",revision:"42d15ef2990f889bbb486d635f017a45"},{url:"_next/static/yxwyHK0z5aGa5aSOEpeqx/pages/[pokemon].js",revision:"6ccebabbd803fd2a831fc3b90af9fbaa"},{url:"_next/static/yxwyHK0z5aGa5aSOEpeqx/pages/_app.js",revision:"cc4c219ee7a74e6b1d93cc630e912884"},{url:"_next/static/yxwyHK0z5aGa5aSOEpeqx/pages/_error.js",revision:"272755967e1e8921201a9f3f92473d5b"},{url:"_next/static/yxwyHK0z5aGa5aSOEpeqx/pages/index.js",revision:"5e49707b095e6d19af40c7857e1d66fe"}]),O(M),function(e,s,r){let i;if("string"==typeof e){const t=new URL(e,location.href);i=new n(({url:e})=>e.href===t.href,s,r)}else if(e instanceof RegExp)i=new a(e,s,r);else if("function"==typeof e)i=new n(e,s,r);else{if(!(e instanceof n))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});i=e}o().registerRoute(i)}(/^https?.*/,new class{constructor(e={}){this.o=l(e.cacheName),this.g=e.plugins||[],this.v=e.fetchOptions,this.m=e.matchOptions}async handle({event:e,request:s}){"string"==typeof s&&(s=new Request(s));let n,a=await b({cacheName:this.o,request:s,event:e,matchOptions:this.m,plugins:this.g});if(!a)try{a=await this.q(s,e)}catch(e){n=e}if(!a)throw new t("no-response",{url:s.url,error:n});return a}async q(e,t){const s=await v({request:e,event:t,fetchOptions:this.v,plugins:this.g}),n=s.clone(),a=g({cacheName:this.o,request:e,response:n,event:t,plugins:this.g});if(t)try{t.waitUntil(a)}catch(e){}return s}},"GET");
