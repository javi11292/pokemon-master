try{self["workbox:core:5.1.3"]&&_()}catch(e){}const e={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},t=t=>[e.prefix,t,e.suffix].filter(e=>e&&e.length>0).join("-"),n=n=>n||t(e.precache),s=e=>new URL(String(e),location.href).href.replace(new RegExp(`^${location.origin}`),""),c=(e,...t)=>{let n=e;return t.length>0&&(n+=` :: ${JSON.stringify(t)}`),n};class a extends Error{constructor(e,t){super(c(e,t)),this.name=e,this.details=t}}const i=new Set;const r=(e,t)=>e.filter(e=>t in e),o=async({request:e,mode:t,plugins:n=[]})=>{const s=r(n,"cacheKeyWillBeUsed");let c=e;for(const e of s)c=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:c}),"string"==typeof c&&(c=new Request(c));return c},f=async({cacheName:e,request:t,event:n,matchOptions:s,plugins:c=[]})=>{const a=await self.caches.open(e),i=await o({plugins:c,request:t,mode:"read"});let r=await a.match(i,s);for(const t of c)if("cachedResponseWillBeUsed"in t){const c=t.cachedResponseWillBeUsed;r=await c.call(t,{cacheName:e,event:n,matchOptions:s,cachedResponse:r,request:i})}return r},u=async({cacheName:e,request:t,response:n,event:c,plugins:u=[],matchOptions:l})=>{const d=await o({plugins:u,request:t,mode:"write"});if(!n)throw new a("cache-put-with-no-response",{url:s(d.url)});const h=await(async({request:e,response:t,event:n,plugins:s=[]})=>{let c=t,a=!1;for(const t of s)if("cacheWillUpdate"in t){a=!0;const s=t.cacheWillUpdate;if(c=await s.call(t,{request:e,response:c,event:n}),!c)break}return a||(c=c&&200===c.status?c:void 0),c||null})({event:c,plugins:u,response:n,request:d});if(!h)return;const w=await self.caches.open(e),p=r(u,"cacheDidUpdate"),y=p.length>0?await f({cacheName:e,matchOptions:l,request:d}):null;try{await w.put(d,h)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of i)await e()}(),e}for(const t of p)await t.cacheDidUpdate.call(t,{cacheName:e,event:c,oldResponse:y,newResponse:h,request:d})},l=async({request:e,fetchOptions:t,event:n,plugins:s=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const c=r(s,"fetchDidFail"),i=c.length>0?e.clone():null;try{for(const t of s)if("requestWillFetch"in t){const s=t.requestWillFetch,c=e.clone();e=await s.call(t,{request:c,event:n})}}catch(e){throw new a("plugin-error-request-will-fetch",{thrownError:e})}const o=e.clone();try{let c;c="navigate"===e.mode?await fetch(e):await fetch(e,t);for(const e of s)"fetchDidSucceed"in e&&(c=await e.fetchDidSucceed.call(e,{event:n,request:o,response:c}));return c}catch(e){for(const t of c)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:i.clone(),request:o.clone()});throw e}};let d;async function h(e,t){const n=e.clone(),s={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},c=t?t(s):s,a=function(){if(void 0===d){const e=new Response("");if("body"in e)try{new Response(e.body),d=!0}catch(e){d=!1}d=!1}return d}()?n.body:await n.blob();return new Response(a,c)}try{self["workbox:precaching:5.1.3"]&&_()}catch(e){}function w(e){if(!e)throw new a("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:n}=e;if(!n)throw new a("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const s=new URL(n,location.href),c=new URL(n,location.href);return s.searchParams.set("__WB_REVISION__",t),{cacheKey:s.href,url:c.href}}class p{constructor(e){this.t=n(e),this.s=new Map,this.i=new Map,this.o=new Map}addToCacheList(e){const t=[];for(const n of e){"string"==typeof n?t.push(n):n&&void 0===n.revision&&t.push(n.url);const{cacheKey:e,url:s}=w(n),c="string"!=typeof n&&n.revision?"reload":"default";if(this.s.has(s)&&this.s.get(s)!==e)throw new a("add-to-cache-list-conflicting-entries",{firstEntry:this.s.get(s),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this.o.has(e)&&this.o.get(e)!==n.integrity)throw new a("add-to-cache-list-conflicting-integrities",{url:s});this.o.set(e,n.integrity)}if(this.s.set(s,e),this.i.set(s,c),t.length>0){const e="Workbox is precaching URLs without revision "+`info: ${t.join(", ")}\nThis is generally NOT safe. `+"Learn more at https://bit.ly/wb-precache";console.warn(e)}}}async install({event:e,plugins:t}={}){const n=[],s=[],c=await self.caches.open(this.t),a=await c.keys(),i=new Set(a.map(e=>e.url));for(const[e,t]of this.s)i.has(t)?s.push(e):n.push({cacheKey:t,url:e});const r=n.map(({cacheKey:n,url:s})=>{const c=this.o.get(n),a=this.i.get(s);return this.u({cacheKey:n,cacheMode:a,event:e,integrity:c,plugins:t,url:s})});return await Promise.all(r),{updatedURLs:n.map(e=>e.url),notUpdatedURLs:s}}async activate(){const e=await self.caches.open(this.t),t=await e.keys(),n=new Set(this.s.values()),s=[];for(const c of t)n.has(c.url)||(await e.delete(c),s.push(c.url));return{deletedURLs:s}}async u({cacheKey:e,url:t,cacheMode:n,event:s,plugins:c,integrity:i}){const r=new Request(t,{integrity:i,cache:n,credentials:"same-origin"});let o,f=await l({event:s,plugins:c,request:r});for(const e of c||[])"cacheWillUpdate"in e&&(o=e);if(!(o?await o.cacheWillUpdate({event:s,request:r,response:f}):f.status<400))throw new a("bad-precaching-response",{url:t,status:f.status});f.redirected&&(f=await h(f)),await u({event:s,plugins:c,response:f,request:e===t?r:new Request(e),cacheName:this.t,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.s}getCachedURLs(){return[...this.s.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.s.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,n=this.getCacheKeyForURL(t);if(n){return(await self.caches.open(this.t)).match(n)}}createHandler(e=!0){return async({request:t})=>{try{const e=await this.matchPrecache(t);if(e)return e;throw new a("missing-precache-entry",{cacheName:this.t,url:t instanceof Request?t.url:t})}catch(n){if(e)return fetch(t);throw n}}}createHandlerBoundToURL(e,t=!0){if(!this.getCacheKeyForURL(e))throw new a("non-precached-url",{url:e});const n=this.createHandler(t),s=new Request(e);return()=>n({request:s})}}let y;const g=()=>(y||(y=new p),y);const b=(e,t)=>{const n=g().getURLsToCacheKeys();for(const s of function*(e,{ignoreURLParametersMatching:t,directoryIndex:n,cleanURLs:s,urlManipulation:c}={}){const a=new URL(e,location.href);a.hash="",yield a.href;const i=function(e,t=[]){for(const n of[...e.searchParams.keys()])t.some(e=>e.test(n))&&e.searchParams.delete(n);return e}(a,t);if(yield i.href,n&&i.pathname.endsWith("/")){const e=new URL(i.href);e.pathname+=n,yield e.href}if(s){const e=new URL(i.href);e.pathname+=".html",yield e.href}if(c){const e=c({url:a});for(const t of e)yield t.href}}(e,t)){const e=n.get(s);if(e)return e}};let v=!1;function m(e){v||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:c}={})=>{const a=n();self.addEventListener("fetch",n=>{const i=b(n.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:c});if(!i)return;let r=self.caches.open(a).then(e=>e.match(i)).then(e=>e||fetch(i));n.respondWith(r)})})(e),v=!0)}const R=[],x={get:()=>R,add(e){R.push(...e)}},q=e=>{const t=g(),n=x.get();e.waitUntil(t.install({event:e,plugins:n}).catch(e=>{throw e}))},U=e=>{const t=g();e.waitUntil(t.activate())};var L;self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),L={},function(e){g().addToCacheList(e),e.length>0&&(self.addEventListener("install",q),self.addEventListener("activate",U))}([{url:"_next/static/2e0cee57f637cef2fac7.worker.js",revision:"7f2314cb919d117439b1d086949020e0"},{url:"_next/static/chunks/11.a9d8f07d7fd7ac562c5e.js",revision:"0eb4fa35d600e78067af453a44d7aa39"},{url:"_next/static/chunks/305539526001a18099103131da2d2b95f67c5a0d.6864c44591cbf1a08238.js",revision:"ae0029d545404e6c52b899530471200d"},{url:"_next/static/chunks/305539526001a18099103131da2d2b95f67c5a0d.6864c44591cbf1a08238.js.LICENSE.txt",revision:"5735008847451525374b1f222e4ab316"},{url:"_next/static/chunks/commons.353949b40ece4ed38e17.js",revision:"d59badf95da43e2d1a3483e6709a4ac6"},{url:"_next/static/chunks/framework.4b8ef01e73ec4285907f.js",revision:"044386a065f8cbd06908993812eee437"},{url:"_next/static/chunks/framework.4b8ef01e73ec4285907f.js.LICENSE.txt",revision:"b8dc26024c8a5849f6ea9608ff1264e4"},{url:"_next/static/current/_buildManifest.js",revision:"fb96ae7926f5104f50f0cf1b3a23a9b5"},{url:"_next/static/current/_ssgManifest.js",revision:"abee47769bf307639ace4945f9cfd4ff"},{url:"_next/static/current/pages/404.js",revision:"c663d6cd7386caeb4e4d2f91e332b110"},{url:"_next/static/current/pages/[pokemon].js",revision:"09a48f313869c07d75d478996cbcfd95"},{url:"_next/static/current/pages/_app.js",revision:"a7ecb6904486441b87d7159609ef381d"},{url:"_next/static/current/pages/_error.js",revision:"bf2c43f7d8634cc6d57b8c9ac0aaa2a8"},{url:"_next/static/current/pages/index.js",revision:"2b89f6b676b5890d48ff44d1e7995178"},{url:"_next/static/runtime/main-56bbfeaa4d065a6c27f4.js",revision:"42fc87d2cdd5ae6182512decabc4da4d"},{url:"_next/static/runtime/polyfills-fc5b3021cf451f17e2e5.js",revision:"4f28bd3d37a02c31fea04e1a00cca933"},{url:"_next/static/runtime/webpack-68d986f379f8ddabcac0.js",revision:"28bda1aa95357f602ab634c72253f316"},{url:"build-manifest.json",revision:"c839bb92e6138837c1abea7cebeb871d"},{url:"react-loadable-manifest.json",revision:"c32b867a5fe3903845aa4ed4c6268998"}]),m(L);
